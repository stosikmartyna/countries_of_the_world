{"version":3,"sources":["components/Header/Header.jsx","components/SearchCountry/SearchCountry.jsx","components/CountriesTable/CountriesTable.jsx","components/SelectRegion/SelectRegion.jsx","components/ScrollTopButton/ScrollTopButton.jsx","components/CountriesList/CountriesList.jsx","views/CountriesView.jsx","App.jsx","index.js"],"names":["Header","className","src","alt","SearchCountry","filterCountries","useState","inputValue","setInputValue","onChange","event","target","value","placeholder","CountriesTable","filteredCountries","map","country","key","name","flag","nativeName","capital","region","subregion","population","area","SelectRegion","onSelectChange","regions","ScrollTopButton","scrollTop","showScroll","onClick","style","display","CountriesList","undefined","countries","setCountries","setFilteredCountries","setShowScroll","filter","index","indexOf","fetchCountryData","a","axios","get","response","data","console","error","filterCountriesByRegion","optionValue","useEffect","window","addEventListener","pageYOffset","searchValue","countryName","toUpperCase","trim","startsWith","scrollTo","top","behavior","CountriesView","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08025ac6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <img src='favicon.png' alt='icon' />\r\n            <h1>Countries of the World</h1>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport './SearchCountry.css';\r\n\r\nexport const SearchCountry = ({filterCountries}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n        filterCountries(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <input onChange={handleInputChange} value={inputValue} placeholder=\"Search country by name\" />\r\n    )\r\n}","import React from 'react';\r\nimport './CountriesTable.css';\r\n\r\nexport const CountriesTable = ({filteredCountries}) => {\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Flag</th>\r\n                    <th>Country Name</th>\r\n                    <th>Native Name</th>\r\n                    <th>Capital</th>\r\n                    <th>Region</th>\r\n                    <th>Subregion</th>\r\n                    <th>Population</th>\r\n                    <th>Area (kmÂ²)</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {filteredCountries?.map(country => {\r\n                    return (\r\n                        <tr key={country.name}>\r\n                            <td className={'flag-cell'}>\r\n                                <img src={country.flag} alt='flag' />\r\n                            </td>\r\n                            <td>{country.name}</td>\r\n                            <td>{country.nativeName}</td>\r\n                            <td>{country.capital}</td>\r\n                            <td>{country.region}</td>\r\n                            <td>{country.subregion}</td>\r\n                            <td className={'amount-cell'}>{country.population}</td>\r\n                            <td className={'amount-cell'}>{country.area}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import React from 'react';\r\nimport './SelectRegion.css';\r\n\r\nexport const SelectRegion = ({onSelectChange, regions}) => {\r\n    return (\r\n        <select onChange={onSelectChange}>\r\n            <option value=\"\">Choose region</option>\r\n            {regions?.map(region => (\r\n                <option value={region} key={region}>\r\n                    {region}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    )\r\n}","import React from 'react';\r\nimport './ScrollTopButton.css';\r\n\r\nexport const ScrollTopButton = ({ scrollTop, showScroll }) => {\r\n    return (\r\n        <button className=\"scrollTop\" onClick={scrollTop} style={{ display: showScroll ? 'flex' : 'none' }}>\r\n            <img src=\"scrollTopButton.png\" />\r\n        </button>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Header } from '../Header/Header';\r\nimport { SearchCountry } from '../SearchCountry/SearchCountry';\r\nimport { CountriesTable } from '../CountriesTable/CountriesTable';\r\nimport { SelectRegion } from '../SelectRegion/SelectRegion';\r\nimport { ScrollTopButton } from '../ScrollTopButton/ScrollTopButton';\r\nimport './CountriesList.css';\r\n\r\nexport const CountriesList = () => {\r\n    const [countries, setCountries] = useState(undefined);\r\n    const [filteredCountries, setFilteredCountries] = useState(undefined);\r\n    const [showScroll, setShowScroll] = useState(false)\r\n\r\n    const regions = countries?.map(country => country.region).filter((region, index, regions) => regions.indexOf(region) === index).filter(region => region !== '');\r\n\r\n    const handleSelectChange = (event) => {\r\n        filterCountriesByRegion(event.target.value);\r\n    }\r\n\r\n    const fetchCountryData = async () => {\r\n        try {\r\n            const response = await axios.get('https://restcountries.eu/rest/v2/all')\r\n            setCountries(response.data)\r\n            setFilteredCountries(response.data)\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const filterCountriesByName = (searchValue) => {\r\n        const filteredCountries = countries.filter(country => {\r\n            const countryName = country.name.toUpperCase();\r\n            const inputValue = searchValue.toUpperCase().trim();\r\n\r\n            return countryName.startsWith(inputValue);\r\n        });\r\n\r\n        setFilteredCountries(filteredCountries);\r\n    }\r\n\r\n    const filterCountriesByRegion = (optionValue) => {\r\n        const filteredCountries = countries.filter(country => country.region === optionValue);\r\n        setFilteredCountries(filteredCountries);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCountryData();\r\n    }, []);\r\n\r\n    const checkScrollTop = () => {\r\n        if (!showScroll && window.pageYOffset > 200) {\r\n            setShowScroll(true)\r\n        } else if (showScroll && window.pageYOffset <= 200) {\r\n            setShowScroll(false)\r\n        }\r\n    };\r\n\r\n    const scrollTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    window.addEventListener('scroll', checkScrollTop)\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"filter-container\">\r\n                <SearchCountry filterCountries={filterCountriesByName} />\r\n                <SelectRegion onSelectChange={handleSelectChange} regions={regions} />\r\n            </div>\r\n            <CountriesTable filteredCountries={filteredCountries} />\r\n            <ScrollTopButton scrollTop={scrollTop} showScroll={showScroll} />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { CountriesList } from '../components/CountriesList/CountriesList';\r\n\r\nexport const CountriesView = () => {\r\n    return (\r\n        <CountriesList />\r\n    )\r\n}","import React from 'react';\nimport { CountriesView } from './views/CountriesView';\nimport './App.css';\n\nexport const App = () => {\n  return (\n    <CountriesView />\n  ); \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}